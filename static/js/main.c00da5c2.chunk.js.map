{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h8/HW8.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","hidden","to","navPreJunPlus","activeClassName","active","header","Message","props","m","message","src","avatar","alt","ava","angle","content","name","mess","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","affair","priority","onClick","deleteAffairCallback","_id","button","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","onKeyPressHandler","inputClass","disabledBtn","onKeyUp","textError","disabled","GreetingContainer","users","addUserCallback","setName","setError","length","alert","trimedName","trim","HW3","setUsers","user","v1","newUser","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","beautySpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","el","index","SuperRadio","onChangeCallback","o","i","arr","HW7","homeWorkReducer","initialPeople","action","copyState","newState","sort","b","nameA","toLowerCase","nameB","alphabet","reverse","u","age","HW8","people","setPeople","finalPeople","p","btn","payload","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c00da5c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Header_active__3m_-6\",\"navPreJunPlus\":\"Header_navPreJunPlus__1bzkk\",\"hidden\":\"Header_hidden__1MwH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2WQar\",\"ava\":\"Message_ava__17DTz\",\"angle\":\"Message_angle__3Rd4Z\",\"content\":\"Message_content__1trIh\",\"name\":\"Message_name__1DFRi\",\"mess\":\"Message_mess__184U8\",\"time\":\"Message_time__29vvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__63TrT\",\"affair\":\"Affairs_affair__1phFv\",\"name\":\"Affairs_name__bM0zj\",\"priority\":\"Affairs_priority__9p65X\",\"button\":\"Affairs_button__1DJDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3NCu-\",\"superInput\":\"SuperInputText_superInput__eJ94I\",\"errorInput\":\"SuperInputText_errorInput__3Z08q\",\"error\":\"SuperInputText_error__2zJyi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1bdQC\",\"red\":\"SuperButton_red__2G5Td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textError\":\"Greeting_textError__tu22M\",\"error\":\"Greeting_error__1BTlo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__29RMI\",\"column\":\"HW4_column__Qo7kj\",\"testSpanError\":\"HW4_testSpanError__2UzWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2kK-3\",\"spanClassName\":\"SuperCheckbox_spanClassName__3NvNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__JH2LL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"beautySpan\":\"SuperEditableSpan_beautySpan__1O-aU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"HW8_btn__3OwrL\"};","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n\n        <div>\n\n            <div className={s.hidden}>\n                <NavLink to='/pre-junior' className={s.navPreJunPlus} activeClassName={s.active}>\n                    Pre-junior\n                </NavLink>\n\n                <NavLink to='/junior' className={s.navPreJunPlus} activeClassName={s.active}>\n                    Junior\n                </NavLink>\n\n                <NavLink to='/junior+' className={s.navPreJunPlus} activeClassName={s.active}>\n                    Junior+\n                </NavLink>\n                <div className={s.header}>Header(hw5)</div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\r\nimport m from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={m.message}>\r\n            <img src={props.avatar} alt={'avatar'} className={m.ava}/>\r\n\r\n            <div className={m.angle}/>\r\n\r\n            <div className={m.content}>\r\n                <div className={m.name}> {props.name} </div>\r\n                <div className={m.mess}> {props.message} </div>\r\n                <div className={m.time}> {props.time} </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n\r\n            {/*<AlternativeMessage/>*/}\r\n            {/*пока идей нет*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport m from './Affairs.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id:number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\r\n\r\n    return (\r\n        <div className={m.affair}>\r\n            <div className={m.name}>{props.affair.name}</div>\r\n            <div className={m.priority}>{props.affair.priority}</div>\r\n            <SuperButton onClick={deleteCallback} className={m.button} >X</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            <SuperButton onClick={setAll}>All</SuperButton>\r\n            <SuperButton onClick={setHigh}>High</SuperButton>\r\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton onClick={setLow}>Low</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\r\nexport type AffairType = { _id:number, name:string, priority:AffairPriorityType }\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType):AffairType[]  => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n        //else if (filter === 'low') return affairs.filter(a => a.priority === 'low')\r\n        //else if (filter === 'middle') return affairs.filter(a => a.priority ==='middle')\r\n        //else if (filter === 'high') return affairs.filter(a => a.priority === 'high')\r\n        //else { return }\r\n    else return affairs.filter(a => a.priority === filter)// need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)// need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : '' // need to fix with (?:)\n    const disabledBtn = error ? true : false;\n\n    return (\n        <div>\n            <div>\n                <SuperInputText value={name} onChange={setNameCallback} onKeyUp={onKeyPressHandler} className={inputClass}/>\n\n                <span className={s.textError}>{error}</span>\n            </div>\n            <SuperButton onClick={addUser} disabled={disabledBtn} > add </SuperButton>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\nexport default Greeting;\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const trimedName = e.currentTarget.value.trim()\n        if (trimedName) {\n            setName(trimedName) // need to fix\n            setError('')\n        }\n    }\n    const addUser = () => {\n        if (name.length === 0) {\n            setError('Name is required')\n        } else if (name.length < 2) {\n            setError('name must contain at least 2 characters')\n        } else {\n            alert(`Hello ${name}  !`) // need to fix\n            addUserCallback(name)\n            setName('')\n        }\n    }\n\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            addUser()\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyPressHandler={onKeyPressHandler}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const user = {_id: v1(), name}\n        const newUser = [...users, user]\n        setUsers(newUser) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\nimport {on} from \"cluster\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        // setEditMode() // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        // setEditMode() // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n//'сделать красивый стиль для спана'\n    const spanClassName = `${s.beautySpan} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (<div>\n                        <span className={spanClassName}></span>\n                        <span\n                            onDoubleClick={onDoubleClickCallBack}\n                            //className={spanClassName}\n\n                            {...restSpanProps}\n                        >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                            {children || restProps.value}\n                    </span>\n                    </div>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        const data = restoreState('editable-span-value', value)\n        setValue(data)\n        // setValue()\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport {on} from \"cluster\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((el, index) => (\n        <option key={index} value={el}> {el} </option>\n    )) : []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        // onChange, onChangeOption\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        // onChange, onChangeOption\n    }\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                name={name}\n                checked={value === o}\n                value = {o}\n                onChange={onChangeCallback}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import {initialPeople, UserType} from \"../HW8\";\n\ntype ACType = {\n    type: string,\n    payload: string\n}\n\ntype ActionType = ACType\n\nexport const homeWorkReducer = (state: UserType[] = initialPeople, action: ActionType): UserType[] => { // need to fix any\n    switch (action.type) {\n        case 'sort': {\n            const copyState = [...state]\n            const newState = copyState.sort(function (a, b) {\n                const nameA = a.name.toLowerCase();\n                const nameB = b.name.toLowerCase();\n                if(nameA < nameB) return -1\n                if(nameA > nameB) return 1\n                return 0\n            })\n            // need to fix\n            return newState\n        }\n        case 'sortD': {\n            const copyState = [...state]\n            const alphabet = copyState.sort(function (a, b) {\n                const nameA = a.name.toLowerCase();\n                const nameB = b.name.toLowerCase();\n                if(nameA < nameB) return -1\n                if(nameA > nameB) return 1\n                return 0\n            })\n            const newState = alphabet.reverse()\n            // need to fix\n            return newState\n        }\n        case 'check': {\n            const copyState = [...state]\n            const newState = copyState.filter((u) => u.age >= 18)\n            // need to fix\n            return newState\n        }\n        default:\n            return state\n    }\n}\n","import React, {useState} from 'react'\nimport {homeWorkReducer} from './bll/homeWorkReducer'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport s from './HW8.module.css'\n\n// export type UserType =\nexport type UserType = {\n    _id: number\n    name: string\n    age: number\n}\n\nexport const initialPeople = [\n    {_id: 0, name: 'Кот', age: 3},\n    {_id: 1, name: 'Александр', age: 66},\n    {_id: 2, name: 'Коля', age: 16},\n    {_id: 3, name: 'Виктор', age: 44},\n    {_id: 4, name: 'Дмитрий', age: 40},\n    {_id: 5, name: 'Ирина', age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState<UserType[]>(initialPeople) // need to fix any\n\n    // need to fix any\n    const finalPeople = people.map((p: UserType) => (\n        <div key={p._id}>\n            {p.name} {p.age}\n            {/*some name, age*/}\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sortD', payload: 'down'}))\n    const checkUp18 = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 'up18'}))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n            {finalPeople}\n            <div className={s.btn}>\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\n            <div><SuperButton onClick={checkUp18}>check 18</SuperButton></div>\n            </div>\n\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW8\n","import React from 'react'\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\n\r\n\r\nexport function Junior() {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n            <HW8/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport function JuniorPlus() {\r\n    return (\r\n        <div>\r\n            Hi i am also junior frontend developer !!!\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport {Junior} from \"./pages/Junior\";\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    'JUNIOR+': '/junior+',\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH[\"JUNIOR+\"]} render={() => <JuniorPlus/>}/>\n                // add routes\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n                <Header/>\n\n                <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}